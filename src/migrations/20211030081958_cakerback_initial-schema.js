exports.up = async (knex) => {
  await knex.schema.createTable("role", (table) => {
    table.increments("id")
    table.string("role", 45).notNullable()
  })
  await knex.schema.createTable("user", (table) => {
    table.increments("id")
    table.string("firstName", 45).notNullable()
    table.string("lastName", 45).notNullable()
    table.string("email", 60).notNullable()
    table.text("passwordHash").notNullable()
    table.text("passwordSalt").notNullable()
    table.string("address", 45).notNullable()
    table.string("city", 45).notNullable()
    table.integer("zipCode", 2).unsigned().notNullable()
    table.text("profilePicture").nullable()
    table.integer("role_id").unsigned().notNullable()
    table.foreign("role_id").references("id").inTable("role")
  })

  await knex.schema.createTable("order", (table) => {
    table.increments("id")
    table.timestamp("date").defaultTo(knex.fn.now())
    table.integer("user_id").unsigned().notNullable()
    table.foreign("user_id").references("id").inTable("user")
  })
  await knex.schema.createTable("category", (table) => {
    table.increments("id")
    table.string("name", 45).notNullable()
  })
  await knex.schema.createTable("shop", (table) => {
    table.increments("id")
    table.string("name", 45).notNullable()
    table.string("address", 45).notNullable()
    table.string("city", 45).notNullable()
    table.integer("zipCode", 2).unsigned().notNullable()
    table.string("picture", 45).notNullable()
    table.integer("user_id").unsigned().notNullable()
    table.foreign("user_id").references("id").inTable("user")
  })
  await knex.schema.createTable("product", (table) => {
    table.increments("id")
    table.string("name", 45).notNullable()
    table.decimal("price", 4, 2).notNullable()
    table.string("mainPicture", 120).notNullable()
    table.string("secondaryPicture", 120).nullable()
    table.integer("shop_id").unsigned().notNullable()
    table.foreign("shop_id").references("id").inTable("shop")
  })
  await knex.schema.createTable("payment", (table) => {
    table.increments("id")
    table.string("type", 45).notNullable()
    table.string("state", 45).notNullable()
    table.integer("order_id").unsigned().notNullable()
    table.foreign("order_id").references("id").inTable("order")
  })
  await knex.schema.createTable("ingredient", (table) => {
    table.increments("id")
    table.string("name", 45).nullable()
    table.boolean("isHalal", 1).notNullable()
    table.boolean("isVegan", 1).notNullable()
    table.boolean("isOrganic", 1).notNullable()
  })
  await knex.schema.createTable("comment", (table) => {
    table.increments("id")
    table.timestamp("date").defaultTo(knex.fn.now())
    table.text("message").notNullable()
    table.integer("score").notNullable()
    table.integer("user_id").unsigned().notNullable()
    table.integer("shop_id").unsigned().notNullable()
    table.foreign("user_id").references("id").inTable("user")
    table.foreign("shop_id").references("id").inTable("shop")
  })
  await knex.schema.createTable("rel_product__ingredient", (table) => {
    table.integer("product_id").unsigned().notNullable()
    table.integer("ingredient_id").unsigned().notNullable()
    table.foreign("product_id").references("id").inTable("product")
    table.foreign("ingredient_id").references("id").inTable("ingredient")
  })
  await knex.schema.createTable("rel_order__product", (table) => {
    table.integer("order_id").unsigned().notNullable()
    table.integer("product_id").unsigned().notNullable()
    table.integer("quantity").unsigned().notNullable()
    table.foreign("order_id").references("id").inTable("order")
    table.foreign("product_id").references("id").inTable("product")
  })
  await knex.schema.createTable("rel_product__category", (table) => {
    table.integer("product_id").unsigned().notNullable()
    table.integer("category_id").unsigned().notNullable()
    table.foreign("product_id").references("id").inTable("product")
    table.foreign("category_id").references("id").inTable("category")
  })
}

exports.down = async (knex) => {
  await knex.schema.dropTable("rel_product__ingredient")
  await knex.schema.dropTable("rel_order__product")
  await knex.schema.dropTable("rel_product__category")
  await knex.schema.dropTable("user")
  await knex.schema.dropTable("role")
  await knex.schema.dropTable("order")
  await knex.schema.dropTable("category")
  await knex.schema.dropTable("product")
  await knex.schema.dropTable("shop")
  await knex.schema.dropTable("payment")
  await knex.schema.dropTable("ingredient")
  await knex.schema.dropTable("comment")
}
